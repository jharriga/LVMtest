#--------------------------------------
# FUNCTIONS

function updatelog {
# Echoes passed string to LOGFILE and stdout
    echo `$DATE`": $1" 2>&1 | tee -a $LOGFILE
}

function error_exit
{
# Function for exit due to fatal program error
# Accepts 1 argument:
#   string containing descriptive error message
# Copied from - http://linuxcommand.org/wss0150.php
    echo "${PROGNAME}: ${1:-"Unknown Error"} ABORTING..." 1>&2
    exit 1
}

function chk_dependencies {
  for cmd in "${DEPENDENCIES_arr[@]}"; do
    command -v $cmd >/dev/null 2>&1 || \
      error_exit "I require ${cmd} but it's not installed."
  done
}

function fio_bw_rw() 
{
    file=$1
    # unit:KB/S
#    bw_read=`grep "bw=" "$file" | grep read | awk -F[=,B]+ '{if(match($4, /[0-9]+K$/)) {printf("%d", substr($4, 0, length($4)-1));} else {printf("%d", int($4)/1024)}}'`
    bw_read=`grep "bw=" "$file" | grep read | awk -F[=,B]+ '{printf("%d", $4)}'`
#    bw_write=`grep "bw=" "$file" | grep write | awk -F[=,B]+ '{if(match($4, /[0-9]+K$/)) {printf("%d", substr($4, 0, length($4)-1));} else {printf("%d", int($4)/1024)}}'`
    bw_write=`grep "bw=" "$file" | grep write | awk -F[=,B]+ '{printf("%d", $4)}'`
    bw_rw_read="$bw_read"
    bw_rw_write="$bw_write"
}

function fio_iops_rw() 
{
    file=$1
    iops_read=`grep "iops=" "$file" | grep read | awk -F[=,]+ '{print $6}'`
    iops_write=`grep "iops=" "$file" | grep write | awk -F[=,]+ '{print $6}'`
    iops_rw_read="$iops_read"
    iops_rw_write="$iops_write"
}

function fio_lat_rw() 
{
    file=$1
    # unit:ms
    line=`grep "read" "$file" -A3 | grep "avg" | grep -v -E "clat|slat"`
    lat_read=`echo $line | awk -F[=,:]+ '{if($1 == "lat (usec)") {printf("%.2f", $7/1000);} else {printf("%.2f", $7)} }'`
    line=`grep "write" "$file" -A3 | grep "avg" | grep -v -E "clat|slat"`
    lat_write=`echo $line | awk -F[=,:]+ '{if($1 == "lat (usec)") {printf("%.2f", $7/1000);} else {printf("%.2f", $7)} }'`

    lat_rw_read="$lat_read"
    lat_rw_write="$lat_write"
}

function fio_print()
{
  fio_output=$1
# grep the FIO output file and fill the strings
  fio_bw_rw $fio_output
  fio_iops_rw $fio_output
  fio_lat_rw $fio_output

# print the strings
  echo -n "> READ: [bw] ${bw_rw_read} KB/s"| tee -a $LOGFILE
  echo -n "  -  [lat] ${lat_rw_read} ms" | tee -a $LOGFILE
  echo    "  -  [iops] ${iops_rw_read}" | tee -a $LOGFILE
  echo -n "> WRITE: [bw] ${bw_rw_write} KB/s" | tee -a $LOGFILE
  echo -n "  -  [lat] ${lat_rw_write} ms" | tee -a $LOGFILE
  echo    "  -  [iops] ${iops_rw_write}" | tee -a $LOGFILE

}

#
# END FUNCTIONS
#--------------------------------------


