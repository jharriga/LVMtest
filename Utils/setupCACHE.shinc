#----------------------------------
# SETUP_CACHE
#
# NOTE that originLV = cachedLV (as set in vars.shinc)
#
# Step 1: create single Volume Group from two devices (fast and slow)
pvcreate --yes ${slowDEV} || \
  error_exit "$LINENO: Unable to pvcreate ${slowDEV}."
pvcreate --yes ${fastDEV} || \
  error_exit "$LINENO: Unable to pvcreate ${fastDEV}."
vgcreate --yes ${cacheVG} ${slowDEV} ${fastDEV} || \
  error_exit "$LINENO: Unable to vgcreate ${cacheVG}."

# Step 2: create origin LV
yes | lvcreate -L ${originSZ} -n ${originLV} ${cacheVG} ${slowDEV} || \
  error_exit "$LINENO: Unable to lvcreate ${originLV}."

# Step 3: create cache data LV
yes | lvcreate -L ${cacheSZ} -n ${cachedataLV} ${cacheVG} ${fastDEV} || \
  error_exit "$LINENO: Unable to lvcreate ${cachedataLV}."

# Step 4: create cache metadata LV
yes | lvcreate -L ${metadataSZ} -n ${cachemetaLV} ${cacheVG} ${fastDEV} || \
  error_exit "$LINENO: Unable to lvcreate ${cachemetaLV}."

# Step 5: create cache pool LV
# Built from cache data and cache metadata LVs
# NOTE that originLV = cachedLV (as set in vars.shinc)
meta="${cacheVG}/${cachemetaLV}"
cache="${cacheVG}/${cachedataLV}"
origin="${cacheVG}/${originLV}"
lvconvert --yes --force --type cache-pool --cachemode ${cacheMODE} \
  --poolmetadata ${meta} ${cache} || \
  error_exit "$LINENO: Unable to lvconvert ${cache}."

# Step 6: create cachedLV by combining cache pool and origin LVs
# NOTE that originLV = cachedLV (as set in vars.shinc)
lvconvert --yes --force --type cache --cachepool ${cache} ${origin} || \
  error_exit "$LINENO: Unable to lvconvert ${origin}."
# After this lvconvert operation, originLV is now a cached LogVol

# Step 7: list LVM devices
lvs -a -o +devices 2>&1 | tee -a $LOGFILE

# Step 8: mkfs and mount cmds for cachedLV
# Using mkfs & mount syntax to match RHCS OSD procedures
yes | mkfs.xfs -f -i size=2048 -q ${cachedLVPATH} || \
  error_exit "$LINENO: Unable to mkfs.xfs ${cachedLVPATH}"
if [ ! -d ${cachedMNT} ]; then
  mkdir ${cachedMNT} || error_exit "$LINENO: Unable to mkdir ${cachedMNT}"
fi
mount -t xfs -o rw,noatime,inode64 ${cachedLVPATH} ${cachedMNT} || \
  error_exit "$LINENO: Unable to mount ${cachedMNT}"

# Step 9: list mounted filesystems
df 2>&1 | tee -a $LOGFILE

# Step 10: verify filesystem is properly created and mounted
touch ${cachedSCRATCH} || \
  error_exit "$LINENO: Unable to create file ${cachedSCRATCH}"
rm -f ${cachedSCRATCH}

